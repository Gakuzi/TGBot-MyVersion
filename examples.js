/**
 * –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ TGbot
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
 */

// === –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ===
const BOT_TOKEN = "YOUR_BOT_TOKEN_HERE";
const WEBAPP_URL = "YOUR_WEBAPP_URL_HERE";

const Bot = new TGBot({ 
  botToken: BOT_TOKEN, 
  webAppUrl: WEBAPP_URL,
  logRequest: true 
});

const ss = SpreadsheetApp.getActiveSpreadsheet();

// === –ü–†–ò–ú–ï–† 1: –û–¢–ü–†–ê–í–ö–ê –°–û–û–ë–©–ï–ù–ò–ô ===

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function sendSimpleMessage(chat_id) {
  const response = Bot.sendMessage({
    chat_id: chat_id,
    text: "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
  });
  console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:", response);
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å HTML —Ä–∞–∑–º–µ—Ç–∫–æ–π
 */
function sendHtmlMessage(chat_id) {
  const text = `
<b>–ñ–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç</b>
<i>–ö—É—Ä—Å–∏–≤</i>
<code>–ö–æ–¥</code>
<a href="https://google.com">–°—Å—ã–ª–∫–∞</a>
  `;
  
  Bot.sendMessage({
    chat_id: chat_id,
    text: text,
    parse_mode: "HTML"
  });
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å Markdown
 */
function sendMarkdownMessage(chat_id) {
  Bot.setParseMode("MarkdownV2");
  
  const text = `
*–ö—É—Ä—Å–∏–≤*
**–ñ–∏—Ä–Ω—ã–π**
\`–ö–æ–¥\`
[–°—Å—ã–ª–∫–∞](https://google\\.com)
  `;
  
  Bot.sendMessage({
    chat_id: chat_id,
    text: text
  });
}

// === –ü–†–ò–ú–ï–† 2: –ö–õ–ê–í–ò–ê–¢–£–†–´ ===

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 */
function sendReplyKeyboard(chat_id) {
  const Keyboard = Bot.keyboard();
  
  const keyboard = Keyboard.make([
    ["–ö–Ω–æ–ø–∫–∞ 1", "–ö–Ω–æ–ø–∫–∞ 2"],
    ["–ö–Ω–æ–ø–∫–∞ 3", "–ö–Ω–æ–ø–∫–∞ 4"],
    ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"]
  ], { columns: 2 }).reply();
  
  Bot.sendMessage({
    chat_id: chat_id,
    text: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
    reply_markup: keyboard
  });
}

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 */
function sendInlineKeyboard(chat_id) {
  const Keyboard = Bot.keyboard();
  const Key = Bot.key();
  
  const keyboard = Keyboard.make([
    [Key.callback("‚úÖ –î–∞", "yes"), Key.callback("‚ùå –ù–µ—Ç", "no")],
    [Key.url("üåê –°–∞–π—Ç", "https://google.com")],
    [Key.callback("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats")]
  ], { columns: 2 }).inline();
  
  Bot.sendMessage({
    chat_id: chat_id,
    text: "Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞:",
    reply_markup: keyboard
  });
}

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
 */
function removeKeyboard(chat_id) {
  const Keyboard = Bot.keyboard();
  
  Bot.sendMessage({
    chat_id: chat_id,
    text: "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞!",
    reply_markup: Keyboard.remove()
  });
}

// === –ü–†–ò–ú–ï–† 3: –ú–ï–î–ò–ê–§–ê–ô–õ–´ ===

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ
 */
function sendPhoto(chat_id) {
  Bot.sendPhoto({
    chat_id: chat_id,
    photo: "https://picsum.photos/400/300",
    caption: "–°–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ —Å Picsum"
  });
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ç–æ –∏–∑ Google Sheets
 */
function sendChartFromSheet(chat_id) {
  try {
    const sheet = ss.getSheetByName("Data");
    if (sheet && sheet.getCharts().length > 0) {
      const chart = sheet.getCharts()[0];
      const blob = chart.getBlob();
      
      Bot.sendPhoto({
        chat_id: chat_id,
        photo: blob,
        caption: "–ì—Ä–∞—Ñ–∏–∫ –∏–∑ Google –¢–∞–±–ª–∏—Ü",
        contentType: "multipart/form-data"
      });
    } else {
      Bot.sendMessage({
        chat_id: chat_id,
        text: "–ì—Ä–∞—Ñ–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ"
      });
    }
  } catch (error) {
    Bot.sendMessage({
      chat_id: chat_id,
      text: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≥—Ä–∞—Ñ–∏–∫–∞: " + error.message
    });
  }
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –≥—Ä—É–ø–ø—ã –º–µ–¥–∏–∞
 */
function sendMediaGroup(chat_id) {
  const data = [
    ["https://picsum.photos/400/300", "–§–æ—Ç–æ 1"],
    ["https://picsum.photos/400/301", "–§–æ—Ç–æ 2"],
    ["https://picsum.photos/400/302", "–§–æ—Ç–æ 3"]
  ].map((item) => Bot.inputMediaPhoto({ 
    media: item[0], 
    caption: item[1] 
  }));
  
  Bot.sendMediaGroup({
    chat_id: chat_id,
    media: data
  });
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
 */
function sendDocument(chat_id) {
  // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π CSV —Ñ–∞–π–ª
  const csvData = "–ò–º—è,–í–æ–∑—Ä–∞—Å—Ç,–ì–æ—Ä–æ–¥\n–ò–≤–∞–Ω,25,–ú–æ—Å–∫–≤–∞\n–ú–∞—Ä–∏—è,30,–°–ü–±";
  const blob = Utilities.newBlob(csvData, MimeType.CSV, "data.csv");
  
  Bot.sendDocument({
    chat_id: chat_id,
    document: blob,
    caption: "–î–∞–Ω–Ω—ã–µ –≤ CSV —Ñ–æ—Ä–º–∞—Ç–µ",
    contentType: "multipart/form-data"
  });
}

// === –ü–†–ò–ú–ï–† 4: –û–ü–†–û–°–´ ===

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –æ–ø—Ä–æ—Å–∞
 */
function sendPoll(chat_id) {
  Bot.sendPoll({
    chat_id: chat_id,
    question: "–ö–∞–∫–æ–π –≤–∞—à –ª—é–±–∏–º—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è?",
    options: ["JavaScript", "Python", "Java", "C++", "–î—Ä—É–≥–æ–π"]
  });
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
 */
function sendQuiz(chat_id) {
  Bot.sendPoll({
    chat_id: chat_id,
    question: "–°—Ç–æ–ª–∏—Ü–∞ –†–æ—Å—Å–∏–∏?",
    options: ["–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"],
    type: "quiz",
    correct_option_id: 0,
    explanation: "–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: –ú–æ—Å–∫–≤–∞"
  });
}

// === –ü–†–ò–ú–ï–† 5: –ö–ê–õ–ï–ù–î–ê–†–¨ ===

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä—è
 */
function sendCalendar(chat_id) {
  Bot.sendMessage({
    chat_id: chat_id,
    text: "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:",
    reply_markup: Bot.calendar({ language: "ru" })
  });
}

// === –ü–†–ò–ú–ï–† 6: –†–ê–ë–û–¢–ê –° –¢–ê–ë–õ–ò–¶–ê–ú–ò ===

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
 */
function sendTableReport(chat_id) {
  try {
    const sheet = ss.getSheetByName("Data");
    if (!sheet) {
      Bot.sendMessage({
        chat_id: chat_id,
        text: "–õ–∏—Å—Ç 'Data' –Ω–µ –Ω–∞–π–¥–µ–Ω"
      });
      return;
    }
    
    const data = sheet.getDataRange().getValues();
    const headers = data[0];
    const rows = data.slice(1);
    
    let report = "üìä <b>–û—Ç—á–µ—Ç –∏–∑ —Ç–∞–±–ª–∏—Ü—ã:</b>\n\n";
    report += `<b>–ó–∞–≥–æ–ª–æ–≤–∫–∏:</b> ${headers.join(", ")}\n`;
    report += `<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫:</b> ${rows.length}\n\n`;
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫
    const previewRows = rows.slice(0, 5);
    previewRows.forEach((row, index) => {
      report += `${index + 1}. ${row.join(" | ")}\n`;
    });
    
    if (rows.length > 5) {
      report += `\n... –∏ –µ—â–µ ${rows.length - 5} —Å—Ç—Ä–æ–∫`;
    }
    
    Bot.sendMessage({
      chat_id: chat_id,
      text: report,
      parse_mode: "HTML"
    });
  } catch (error) {
    Bot.sendMessage({
      chat_id: chat_id,
      text: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ç—á–µ—Ç–∞: " + error.message
    });
  }
}

/**
 * –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
 */
function exportTableData(chat_id) {
  try {
    const sheet = ss.getSheetByName("Data");
    if (!sheet) {
      Bot.sendMessage({
        chat_id: chat_id,
        text: "–õ–∏—Å—Ç 'Data' –Ω–µ –Ω–∞–π–¥–µ–Ω"
      });
      return;
    }
    
    const data = sheet.getDataRange().getValues();
    let csvContent = "";
    
    data.forEach(row => {
      csvContent += row.map(cell => `"${cell}"`).join(",") + "\n";
    });
    
    const blob = Utilities.newBlob(csvContent, MimeType.CSV, "table_data.csv");
    
    Bot.sendDocument({
      chat_id: chat_id,
      document: blob,
      caption: "–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ç–∞–±–ª–∏—Ü—ã",
      contentType: "multipart/form-data"
    });
  } catch (error) {
    Bot.sendMessage({
      chat_id: chat_id,
      text: "–û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: " + error.message
    });
  }
}

// === –ü–†–ò–ú–ï–† 7: –û–ë–†–ê–ë–û–¢–ö–ê CALLBACK ===

/**
 * –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ doPost
 */
function handleCallbackExample(callback) {
  const chat_id = callback.from.id;
  const data = callback.data;
  
  switch (data) {
    case "yes":
      Bot.answerCallbackQuery({
        callback_query_id: callback.id,
        text: "–í—ã –≤—ã–±—Ä–∞–ª–∏ –î–∞!"
      });
      Bot.editMessageText({
        chat_id: chat_id,
        message_id: callback.message.message_id,
        text: "‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –î–∞!"
      });
      break;
      
    case "no":
      Bot.answerCallbackQuery({
        callback_query_id: callback.id,
        text: "–í—ã –≤—ã–±—Ä–∞–ª–∏ –ù–µ—Ç!"
      });
      Bot.editMessageText({
        chat_id: chat_id,
        message_id: callback.message.message_id,
        text: "‚ùå –í—ã –≤—ã–±—Ä–∞–ª–∏ –ù–µ—Ç!"
      });
      break;
      
    case "stats":
      sendStatsExample(chat_id);
      Bot.answerCallbackQuery({
        callback_query_id: callback.id
      });
      break;
  }
}

/**
 * –ü—Ä–∏–º–µ—Ä –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */
function sendStatsExample(chat_id) {
  const stats = {
    totalMessages: 150,
    activeUsers: 25,
    todayMessages: 12
  };
  
  const text = `
üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>

üí¨ –í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: ${stats.totalMessages}
üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${stats.activeUsers}
üìÖ –°–æ–æ–±—â–µ–Ω–∏–π —Å–µ–≥–æ–¥–Ω—è: ${stats.todayMessages}
  `;
  
  Bot.sendMessage({
    chat_id: chat_id,
    text: text,
    parse_mode: "HTML"
  });
}

// === –ü–†–ò–ú–ï–† 8: –†–ê–ë–û–¢–ê –° –§–ê–ô–õ–ê–ú–ò ===

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –Ω–∞ Google Drive
 */
function saveFileToDrive(message, folderId) {
  try {
    const fileInfo = Bot.getFile(message.document.file_id);
    const blob = UrlFetchApp.fetch(fileInfo).getBlob();
    
    const fileName = message.document.file_name;
    const resource = {
      title: fileName,
      parents: [{ id: folderId }]
    };
    
    const file = Drive.Files.insert(resource, blob);
    return file.id;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞:", error);
    return null;
  }
}

// === –ü–†–ò–ú–ï–† 9: –í–ê–õ–ò–î–ê–¶–ò–Ø ===

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã
 */
function isCommand(message) {
  return Bot.isBotCommandMessage(message);
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function getMessageType(message) {
  if (message.text) return "text";
  if (message.photo) return "photo";
  if (message.document) return "document";
  if (message.audio) return "audio";
  if (message.video) return "video";
  return "unknown";
}

// === –ü–†–ò–ú–ï–† 10: –£–¢–ò–õ–ò–¢–´ ===

/**
 * –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
 */
function transliterateFileName(filename) {
  return Bot.translit(filename);
}

/**
 * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø–æ–º–æ—â—å—é helper
 */
function logWithHelper(data) {
  const log = Bot.helper.log;
  log(data);
}

// === –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–û–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø ===

/**
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
 */
function demonstrateAllFeatures(chat_id) {
  // 1. –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  sendSimpleMessage(chat_id);
  
  // 2. HTML —Å–æ–æ–±—â–µ–Ω–∏–µ
  setTimeout(() => {
    sendHtmlMessage(chat_id);
  }, 1000);
  
  // 3. Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
  setTimeout(() => {
    sendInlineKeyboard(chat_id);
  }, 2000);
  
  // 4. –û–ø—Ä–æ—Å
  setTimeout(() => {
    sendPoll(chat_id);
  }, 3000);
  
  // 5. –ö–∞–ª–µ–Ω–¥–∞—Ä—å
  setTimeout(() => {
    sendCalendar(chat_id);
  }, 4000);
}

// === –¢–ï–°–¢–û–í–´–ï –§–£–ù–ö–¶–ò–ò ===

/**
 * –¢–µ—Å—Ç –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
 */
function testAllFeatures() {
  const testChatId = "YOUR_TEST_CHAT_ID"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id
  
  console.log("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–£–ù–ö–¶–ò–ô ===");
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
  sendSimpleMessage(testChatId);
  sendHtmlMessage(testChatId);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
  sendReplyKeyboard(testChatId);
  sendInlineKeyboard(testChatId);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ–¥–∏–∞
  sendPhoto(testChatId);
  sendMediaGroup(testChatId);
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–ø—Ä–æ—Å—ã
  sendPoll(testChatId);
  sendQuiz(testChatId);
  
  console.log("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ===");
} 