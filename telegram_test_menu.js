/**
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞ –≤ Google –¢–∞–±–ª–∏—Ü–∞—Ö
 * –°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
if (!Bot) {
  initBot();
}

const ss = SpreadsheetApp.getActiveSpreadsheet();

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω—É—é –ø–∞–Ω–µ–ª—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function showTelegramTestPanel() {
  const html = HtmlService.createHtmlOutputFromFile('telegram_test_ui.html')
    .setWidth(900)
    .setHeight(700);
  
  SpreadsheetApp.getUi().showModalDialog(html, 'ü§ñ Telegram Bot Test Panel');
}

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø HTML =====

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function sendTestMessage(chatId, text, parseMode) {
  if (!Bot) initBot();
  try {
    const options = {
      chat_id: chatId,
      text: text
    };
    
    if (parseMode) {
      options.parse_mode = parseMode;
    }
    
    const response = Bot.sendMessage(options);
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', response);
    return response;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    throw error;
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
 */
function sendQuickAction(chatId, action) {
  if (!Bot) initBot();
  try {
    let text = '';
    
    switch (action) {
      case 'start':
        text = '/start';
        break;
      case 'help':
        text = '/help';
        break;
      case 'stats':
        text = '/stats';
        break;
      case 'users':
        text = '/users';
        break;
    }
    
    const response = Bot.sendMessage({
      chat_id: chatId,
      text: text
    });
    
    console.log('–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', response);
    return response;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function getMyChatId() {
  const chatId = Browser.inputBox('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Chat ID:');
  if (chatId && chatId !== 'cancel') {
    return chatId;
  }
  return null;
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function sendWelcomeMessage(chatId) {
  if (!Bot) initBot();
  const text = `
ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç!</b>

–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –ø–∞–Ω–µ–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google –¢–∞–±–ª–∏—Ü.

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
‚Ä¢ –û–ø—Ä–æ—Å—ã –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

<i>–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ TGbot</i>
  `;
  
  return Bot.sendMessage({
    chat_id: chatId,
    text: text,
    parse_mode: "HTML"
  });
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–∫–∏
 */
function sendHelpMessage(chatId) {
  if (!Bot) initBot();
  const text = `
üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

<b>–ü–∞–Ω–µ–ª—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
‚Ä¢ –û–ø—Ä–æ—Å—ã –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ê–≤—Ç–æ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: @nosaev_m
  `;
  
  return Bot.sendMessage({
    chat_id: chatId,
    text: text,
    parse_mode: "HTML"
  });
}

// ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
 */
function showBotSettings() {
  if (!Bot) initBot();
  const token = getBotToken();
  const webapp = getWebAppUrl();
  const html = HtmlService.createHtmlOutput(`
    <div style="padding: 20px; font-family: Arial, sans-serif;">
      <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</h2>
      <p><strong>–¢–æ–∫–µ–Ω:</strong> ${token ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</p>
      <p><strong>WebApp URL:</strong> ${webapp ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</p>
      <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${token && webapp ? '–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ' : '–¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}</p>
    </div>
  `)
  .setWidth(400)
  .setHeight(300);
  
  SpreadsheetApp.getUi().showModalDialog(html, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞');
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
 */
function showQuickStats() {
  try {
    const messagesSheet = ss.getSheetByName("Messages");
    const usersSheet = ss.getSheetByName("Users");
    
    let totalMessages = 0;
    let totalUsers = 0;
    
    if (messagesSheet && messagesSheet.getLastRow() > 1) {
      totalMessages = messagesSheet.getLastRow() - 1;
    }
    
    if (usersSheet && usersSheet.getLastRow() > 1) {
      totalUsers = usersSheet.getLastRow() - 1;
    }
    
    const html = HtmlService.createHtmlOutput(`
      <div style="padding: 20px; font-family: Arial, sans-serif;">
        <h2>üìä –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
        <p><strong>–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</strong> ${totalMessages}</p>
        <p><strong>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</strong> ${totalUsers}</p>
        <p><strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}</p>
      </div>
    `)
    .setWidth(400)
    .setHeight(300);
    
    SpreadsheetApp.getUi().showModalDialog(html, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
  } catch (error) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ' + error.message);
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π
 */
function runQuickTest() {
  if (!Bot) initBot();
  try {
    const testChatId = Browser.inputBox('–í–≤–µ–¥–∏—Ç–µ Chat ID –¥–ª—è —Ç–µ—Å—Ç–∞:');
    if (!testChatId || testChatId === 'cancel') return;
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    Bot.sendMessage({
      chat_id: testChatId,
      text: "üß™ –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    });
    
    // –¢–µ—Å—Ç 2: HTML —Å–æ–æ–±—â–µ–Ω–∏–µ
    setTimeout(() => {
      Bot.sendMessage({
        chat_id: testChatId,
        text: "<b>üß™ –¢–µ—Å—Ç 2:</b> <i>HTML —Å–æ–æ–±—â–µ–Ω–∏–µ</i>",
        parse_mode: "HTML"
      });
    }, 1000);
    
    // –¢–µ—Å—Ç 3: Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    setTimeout(() => {
      const Keyboard = Bot.keyboard();
      const Key = Bot.key();
      
      const keyboard = Keyboard.make([
        [Key.callback("‚úÖ –¢–µ—Å—Ç", "test"), Key.callback("‚ùå –û—Ç–º–µ–Ω–∞", "cancel")]
      ], { columns: 2 }).inline();
      
      Bot.sendMessage({
        chat_id: testChatId,
        text: "üß™ –¢–µ—Å—Ç 3: Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞",
        reply_markup: keyboard
      });
    }, 2000);
    
    SpreadsheetApp.getUi().alert('–¢–µ—Å—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram.');
  } catch (error) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ' + error.message);
  }
}