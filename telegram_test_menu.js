/**
 * –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞ –≤ Google –¢–∞–±–ª–∏—Ü–∞—Ö
 * –°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏
 */

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
const BOT_TOKEN = "YOUR_BOT_TOKEN_HERE";
const WEBAPP_URL = "YOUR_WEBAPP_URL_HERE";

const Bot = TGbot.bot({ 
  botToken: BOT_TOKEN, 
  webAppUrl: WEBAPP_URL,
  logRequest: true 
});

const ss = SpreadsheetApp.getActiveSpreadsheet();

/**
 * –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –º–µ–Ω—é
 */

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω—É—é –ø–∞–Ω–µ–ª—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 */
function showTelegramTestPanel() {
  const html = HtmlService.createHtmlOutput(`
    <!DOCTYPE html>
    <html>
    <head>
      <base target="_top">
      <meta charset="utf-8">
      <style>
        body {
          font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
          margin: 0;
          padding: 20px;
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          color: #333;
        }
        .container {
          max-width: 800px;
          margin: 0 auto;
          background: white;
          border-radius: 15px;
          box-shadow: 0 10px 30px rgba(0,0,0,0.2);
          overflow: hidden;
        }
        .header {
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          color: white;
          padding: 20px;
          text-align: center;
        }
        .header h1 {
          margin: 0;
          font-size: 24px;
          font-weight: 300;
        }
        .content {
          padding: 30px;
        }
        .section {
          margin-bottom: 30px;
          padding: 20px;
          border: 1px solid #e0e0e0;
          border-radius: 10px;
          background: #fafafa;
        }
        .section h3 {
          margin-top: 0;
          color: #667eea;
          border-bottom: 2px solid #667eea;
          padding-bottom: 10px;
        }
        .form-group {
          margin-bottom: 15px;
        }
        label {
          display: block;
          margin-bottom: 5px;
          font-weight: 600;
          color: #555;
        }
        input, textarea, select {
          width: 100%;
          padding: 12px;
          border: 2px solid #ddd;
          border-radius: 8px;
          font-size: 14px;
          transition: border-color 0.3s;
          box-sizing: border-box;
        }
        input:focus, textarea:focus, select:focus {
          border-color: #667eea;
          outline: none;
        }
        .btn {
          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
          color: white;
          border: none;
          padding: 12px 25px;
          border-radius: 8px;
          cursor: pointer;
          font-size: 14px;
          font-weight: 600;
          transition: transform 0.2s;
          margin: 5px;
        }
        .btn:hover {
          transform: translateY(-2px);
        }
        .btn-secondary {
          background: #6c757d;
        }
        .btn-success {
          background: #28a745;
        }
        .btn-warning {
          background: #ffc107;
          color: #333;
        }
        .btn-danger {
          background: #dc3545;
        }
        .chat-id-input {
          display: flex;
          gap: 10px;
          align-items: center;
        }
        .chat-id-input input {
          flex: 1;
        }
        .quick-actions {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
          gap: 15px;
          margin-top: 20px;
        }
        .quick-action {
          background: white;
          padding: 15px;
          border-radius: 8px;
          border: 1px solid #e0e0e0;
          text-align: center;
          cursor: pointer;
          transition: transform 0.2s;
        }
        .quick-action:hover {
          transform: translateY(-3px);
          box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .status {
          padding: 10px;
          border-radius: 5px;
          margin: 10px 0;
          font-weight: 600;
        }
        .status.success {
          background: #d4edda;
          color: #155724;
          border: 1px solid #c3e6cb;
        }
        .status.error {
          background: #f8d7da;
          color: #721c24;
          border: 1px solid #f5c6cb;
        }
        .status.info {
          background: #d1ecf1;
          color: #0c5460;
          border: 1px solid #bee5eb;
        }
        .tabs {
          display: flex;
          border-bottom: 2px solid #e0e0e0;
          margin-bottom: 20px;
        }
        .tab {
          padding: 10px 20px;
          cursor: pointer;
          border-bottom: 3px solid transparent;
          transition: all 0.3s;
        }
        .tab.active {
          border-bottom-color: #667eea;
          color: #667eea;
          font-weight: 600;
        }
        .tab-content {
          display: none;
        }
        .tab-content.active {
          display: block;
        }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>ü§ñ Telegram Bot Test Panel</h1>
          <p>–ü–∞–Ω–µ–ª—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞</p>
        </div>
        
        <div class="content">
          <div class="tabs">
            <div class="tab active" onclick="switchTab('messages')">üí¨ –°–æ–æ–±—â–µ–Ω–∏—è</div>
            <div class="tab" onclick="switchTab('media')">üì∑ –ú–µ–¥–∏–∞</div>
            <div class="tab" onclick="switchTab('keyboards')">‚å®Ô∏è –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã</div>
            <div class="tab" onclick="switchTab('polls')">üìä –û–ø—Ä–æ—Å—ã</div>
            <div class="tab" onclick="switchTab('settings')">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</div>
          </div>
          
          <!-- –í–∫–ª–∞–¥–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π -->
          <div id="messages" class="tab-content active">
            <div class="section">
              <h3>üìù –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π</h3>
              
              <div class="form-group">
                <label>Chat ID –ø–æ–ª—É—á–∞—Ç–µ–ª—è:</label>
                <div class="chat-id-input">
                  <input type="text" id="chatId" placeholder="–í–≤–µ–¥–∏—Ç–µ Chat ID">
                  <button class="btn btn-secondary" onclick="getMyChatId()">–ú–æ–π ID</button>
                </div>
              </div>
              
              <div class="form-group">
                <label>–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:</label>
                <textarea id="messageText" rows="4" placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è..."></textarea>
              </div>
              
              <div class="form-group">
                <label>–¢–∏–ø —Ä–∞–∑–º–µ—Ç–∫–∏:</label>
                <select id="parseMode">
                  <option value="HTML">HTML</option>
                  <option value="MarkdownV2">Markdown V2</option>
                  <option value="">–ë–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏</option>
                </select>
              </div>
              
              <button class="btn" onclick="sendMessage()">üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</button>
              <button class="btn btn-secondary" onclick="sendWelcomeMessage()">üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ</button>
              <button class="btn btn-warning" onclick="sendHelpMessage()">‚ùì –°–ø—Ä–∞–≤–∫–∞</button>
            </div>
            
            <div class="section">
              <h3>‚ö° –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è</h3>
              <div class="quick-actions">
                <div class="quick-action" onclick="quickAction('start')">
                  <h4>üöÄ /start</h4>
                  <p>–ö–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞</p>
                </div>
                <div class="quick-action" onclick="quickAction('help')">
                  <h4>‚ùì /help</h4>
                  <p>–°–ø—Ä–∞–≤–∫–∞</p>
                </div>
                <div class="quick-action" onclick="quickAction('stats')">
                  <h4>üìä /stats</h4>
                  <p>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</p>
                </div>
                <div class="quick-action" onclick="quickAction('users')">
                  <h4>üë• /users</h4>
                  <p>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</p>
                </div>
              </div>
            </div>
          </div>
          
          <div id="status"></div>
        </div>
      </div>
      
      <script>
        // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫
        function switchTab(tabName) {
          document.querySelectorAll('.tab-content').forEach(tab => {
            tab.classList.remove('active');
          });
          document.querySelectorAll('.tab').forEach(tab => {
            tab.classList.remove('active');
          });
          
          document.getElementById(tabName).classList.add('active');
          event.target.classList.add('active');
        }
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        function sendMessage() {
          const chatId = document.getElementById('chatId').value;
          const text = document.getElementById('messageText').value;
          const parseMode = document.getElementById('parseMode').value;
          
          if (!chatId || !text) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ Chat ID –∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è', 'error');
            return;
          }
          
          google.script.run
            .withSuccessHandler(() => showStatus('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success'))
            .withFailureHandler(error => showStatus('–û—à–∏–±–∫–∞: ' + error, 'error'))
            .sendTestMessage(chatId, text, parseMode);
        }
        
        // –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        function quickAction(action) {
          const chatId = document.getElementById('chatId').value;
          if (!chatId) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ Chat ID', 'error');
            return;
          }
          
          google.script.run
            .withSuccessHandler(() => showStatus('–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', 'success'))
            .withFailureHandler(error => showStatus('–û—à–∏–±–∫–∞: ' + error, 'error'))
            .sendQuickAction(chatId, action);
        }
        
        // –ü–æ–ª—É—á–∏—Ç—å –º–æ–π Chat ID
        function getMyChatId() {
          google.script.run
            .withSuccessHandler(chatId => {
              document.getElementById('chatId').value = chatId;
              showStatus('Chat ID —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω', 'info');
            })
            .withFailureHandler(error => showStatus('–û—à–∏–±–∫–∞: ' + error, 'error'))
            .getMyChatId();
        }
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        function sendWelcomeMessage() {
          const chatId = document.getElementById('chatId').value;
          if (!chatId) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ Chat ID', 'error');
            return;
          }
          
          google.script.run
            .withSuccessHandler(() => showStatus('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', 'success'))
            .withFailureHandler(error => showStatus('–û—à–∏–±–∫–∞: ' + error, 'error'))
            .sendWelcomeMessage(chatId);
        }
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–∫–∏
        function sendHelpMessage() {
          const chatId = document.getElementById('chatId').value;
          if (!chatId) {
            showStatus('–í–≤–µ–¥–∏—Ç–µ Chat ID', 'error');
            return;
          }
          
          google.script.run
            .withSuccessHandler(() => showStatus('–°–ø—Ä–∞–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!', 'success'))
            .withFailureHandler(error => showStatus('–û—à–∏–±–∫–∞: ' + error, 'error'))
            .sendHelpMessage(chatId);
        }
        
        // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
        function showStatus(message, type) {
          const statusDiv = document.getElementById('status');
          statusDiv.innerHTML = '<div class="status ' + type + '">' + message + '</div>';
          
          setTimeout(() => {
            statusDiv.innerHTML = '';
          }, 5000);
        }
      </script>
    </body>
    </html>
  `)
  .setWidth(900)
  .setHeight(700);
  
  SpreadsheetApp.getUi().showModalDialog(html, 'ü§ñ Telegram Bot Test Panel');
}

// ===== –§–£–ù–ö–¶–ò–ò –î–õ–Ø HTML =====

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function sendTestMessage(chatId, text, parseMode) {
  try {
    const options = {
      chat_id: chatId,
      text: text
    };
    
    if (parseMode) {
      options.parse_mode = parseMode;
    }
    
    const response = Bot.sendMessage(options);
    console.log('–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:', response);
    return response;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    throw error;
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
 */
function sendQuickAction(chatId, action) {
  try {
    let text = '';
    
    switch (action) {
      case 'start':
        text = '/start';
        break;
      case 'help':
        text = '/help';
        break;
      case 'stats':
        text = '/stats';
        break;
      case 'users':
        text = '/users';
        break;
    }
    
    const response = Bot.sendMessage({
      chat_id: chatId,
      text: text
    });
    
    console.log('–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', response);
    return response;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–∞–Ω–¥—ã:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–∏—Ç—å Chat ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
function getMyChatId() {
  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å Chat ID –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
  // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π ID
  return "YOUR_CHAT_ID_HERE";
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
 */
function sendWelcomeMessage(chatId) {
  const text = `
ü§ñ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç!</b>

–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏–∑ –ø–∞–Ω–µ–ª–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Google –¢–∞–±–ª–∏—Ü.

<b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä
‚Ä¢ –û–ø—Ä–æ—Å—ã –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

<i>–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ TGbot</i>
  `;
  
  return Bot.sendMessage({
    chat_id: chatId,
    text: text,
    parse_mode: "HTML"
  });
}

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø—Ä–∞–≤–∫–∏
 */
function sendHelpMessage(chatId) {
  const text = `
üìö <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º:</b>

<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/users - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

<b>–ü–∞–Ω–µ–ª—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:</b>
‚Ä¢ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ä–∞–∑–º–µ—Ç–∫–æ–π
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏
‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä
‚Ä¢ –û–ø—Ä–æ—Å—ã –∏ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö

<b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b>
–ê–≤—Ç–æ—Ä –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: @nosaev_m
  `;
  
  return Bot.sendMessage({
    chat_id: chatId,
    text: text,
    parse_mode: "HTML"
  });
}

// ===== –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò =====

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
 */
function showBotSettings() {
  const html = HtmlService.createHtmlOutput(`
    <div style="padding: 20px; font-family: Arial, sans-serif;">
      <h2>‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞</h2>
      <p><strong>–¢–æ–∫–µ–Ω:</strong> ${BOT_TOKEN ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</p>
      <p><strong>WebApp URL:</strong> ${WEBAPP_URL ? '–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}</p>
      <p><strong>–°—Ç–∞—Ç—É—Å:</strong> ${BOT_TOKEN && WEBAPP_URL ? '–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ' : '–¢—Ä–µ–±—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}</p>
    </div>
  `)
  .setWidth(400)
  .setHeight(300);
  
  SpreadsheetApp.getUi().showModalDialog(html, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞');
}

/**
 * –ü–æ–∫–∞–∑–∞—Ç—å –±—ã—Å—Ç—Ä—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
 */
function showQuickStats() {
  try {
    const messagesSheet = ss.getSheetByName("Messages");
    const usersSheet = ss.getSheetByName("Users");
    
    let totalMessages = 0;
    let totalUsers = 0;
    
    if (messagesSheet && messagesSheet.getLastRow() > 1) {
      totalMessages = messagesSheet.getLastRow() - 1;
    }
    
    if (usersSheet && usersSheet.getLastRow() > 1) {
      totalUsers = usersSheet.getLastRow() - 1;
    }
    
    const html = HtmlService.createHtmlOutput(`
      <div style="padding: 20px; font-family: Arial, sans-serif;">
        <h2>üìä –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</h2>
        <p><strong>–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π:</strong> ${totalMessages}</p>
        <p><strong>–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</strong> ${totalUsers}</p>
        <p><strong>–î–∞—Ç–∞:</strong> ${new Date().toLocaleDateString('ru-RU')}</p>
      </div>
    `)
    .setWidth(400)
    .setHeight(300);
    
    SpreadsheetApp.getUi().showModalDialog(html, '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞');
  } catch (error) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: ' + error.message);
  }
}

/**
 * –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Ñ—É–Ω–∫—Ü–∏–π
 */
function runQuickTest() {
  try {
    const testChatId = "YOUR_TEST_CHAT_ID"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Chat ID
    
    // –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    Bot.sendMessage({
      chat_id: testChatId,
      text: "üß™ –¢–µ—Å—Ç 1: –ü—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    });
    
    // –¢–µ—Å—Ç 2: HTML —Å–æ–æ–±—â–µ–Ω–∏–µ
    setTimeout(() => {
      Bot.sendMessage({
        chat_id: testChatId,
        text: "<b>üß™ –¢–µ—Å—Ç 2:</b> <i>HTML —Å–æ–æ–±—â–µ–Ω–∏–µ</i>",
        parse_mode: "HTML"
      });
    }, 1000);
    
    // –¢–µ—Å—Ç 3: Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    setTimeout(() => {
      const Keyboard = TGbot.keyboard();
      const Key = TGbot.key();
      
      const keyboard = Keyboard.make([
        [Key.callback("‚úÖ –¢–µ—Å—Ç", "test"), Key.callback("‚ùå –û—Ç–º–µ–Ω–∞", "cancel")]
      ], { columns: 2 }).inline();
      
      Bot.sendMessage({
        chat_id: testChatId,
        text: "üß™ –¢–µ—Å—Ç 3: Inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞",
        reply_markup: keyboard
      });
    }, 2000);
    
    SpreadsheetApp.getUi().alert('–¢–µ—Å—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram.');
  } catch (error) {
    SpreadsheetApp.getUi().alert('–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ' + error.message);
  }
} 